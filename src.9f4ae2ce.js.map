{"version":3,"sources":["index.js"],"names":["CountdownTimer","selector","targetDate","intervalId","document","querySelector","onTick","updateTimeFields","init","time","getTimeComponents","getTime","Date","now","isActive","startTime","setInterval","currentTime","deltaTime","days","pad","Math","floor","hours","mins","secs","value","String","padStart","timer","startTimer","call"],"mappings":";;;AA2EA,aAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EA3EA,QAAA,gBAGMA,IAAAA,EAAAA,WACoC,SAAA,EAAA,GAAxBC,IAAAA,EAAAA,EAAAA,SAAUC,EAAAA,EAAAA,WAAc,EAAA,KAAA,GAC7BC,KAAAA,WAAa,KACbF,KAAAA,SAAWG,SAASC,cAAiBJ,GAAAA,OAAAA,IACrCK,KAAAA,OAAS,KAAKC,iBACdL,KAAAA,WAAaA,EACbM,KAAAA,OAkEb,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,OAhEO,MAAA,WACOC,IAAAA,EAAO,KAAKC,kBAAkB,KAAKR,WAAWS,UAAYC,KAAKC,OAChEP,KAAAA,OAAOG,KA8DpB,CAAA,IAAA,QA3DQ,MAAA,WAAA,IAAA,EAAA,KACA,IAAA,KAAKK,SAAL,CAIEC,IAAAA,EAAYH,KAAKC,MAClBC,KAAAA,UAAW,EAEXX,KAAAA,WAAaa,YAAY,WACtBC,IACAC,EADcN,KAAKC,MACOE,EAC1BN,EAAO,EAAKC,kBAAkBQ,GAEpC,EAAKZ,OAAOG,IACX,QA6CP,CAAA,IAAA,oBA3CuBA,MAAAA,SAAAA,GAQZ,MAAA,CAAEU,KAPI,KAAKC,IAAIC,KAAKC,MAAMb,EAAQ,QAO1Bc,MAND,KAAKH,IACjBC,KAAKC,MAAOb,EAAQ,MAAyB,OAKzBe,KAHT,KAAKJ,IAAIC,KAAKC,MAAOb,EAAQ,KAAoB,MAGlCgB,KAFf,KAAKL,IAAIC,KAAKC,MAAOb,EAAQ,IAAc,SAqC5D,CAAA,IAAA,MAjCQiB,MAAAA,SAAAA,GACGC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,SAgCrC,EAxEM5B,GA2CA6B,EAAQ,IAAI7B,EAAe,CAACC,SAAU,WAAYC,WAAY,IAAIU,KAAK,kBAC7EiB,EAAMC,WAAWC,KAAKF","file":"src.9f4ae2ce.js","sourceRoot":"..\\src","sourcesContent":["import './common.css';\r\n// Плагін - це клас CountdownTimer, екземпляр якого створює новий таймер з настройками.\r\n\r\nclass CountdownTimer{\r\n    constructor({ selector, targetDate }) {\r\n        this.intervalId = null;\r\n        this.selector = document.querySelector(`${selector}`);\r\n        this.onTick = this.updateTimeFields;\r\n        this.targetDate = targetDate;\r\n        this.init();\r\n    }    \r\ninit() {\r\n        const time = this.getTimeComponents(this.targetDate.getTime() - Date.now());\r\n        this.onTick(time);\r\n    }\r\n\r\nstart() {\r\n    if (this.isActive) {\r\n      return;\r\n    }\r\n\r\n    const startTime = Date.now();\r\n    this.isActive = true;\r\n\r\n    this.intervalId = setInterval(() => {\r\n      const currentTime = Date.now();\r\n      const deltaTime = currentTime - startTime;\r\n      const time = this.getTimeComponents(deltaTime);\r\n\r\n      this.onTick(time);\r\n    }, 1000);\r\n}\r\n     getTimeComponents(time) {\r\n    const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\r\n    const hours = this.pad(\r\n      Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)),\r\n    );\r\n    const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\r\n    const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\r\n\r\n    return { days, hours, mins, secs };\r\n  }\r\n    pad(value) {\r\n    return String(value).padStart(2, '0');\r\n  }\r\n}\r\nconst timer = new CountdownTimer({selector: '#timer-1', targetDate: new Date('Nov 11, 2020')});\r\ntimer.startTimer.call(timer);\r\n\r\n\r\n// // Для підрахунку значень використовуй такі готові формули, де time - різниця між targetDate і поточною датою.\r\n\r\n// /*\r\n//  * Дні, що залишилися: ділимо значення UTC на 1000 * 60 * 60 * 24, кількість\r\n//  * мілісекунд в один день (мілісекунди * секунди * хвилини * години)\r\n//  */\r\n// const days = Math.floor(time / (1000 * 60 * 60 * 24));\r\n\r\n// /*\r\n//  * Решта годин: отримуємо залишок від попереднього розрахунку за допомогою оператора\r\n//  * залишку% і ділимо його на кількість мілісекунд в одній годині\r\n//  * (1000 * 60 * 60 = мілісекунди * хвилини * секунди)\r\n//  */\r\n// const hours = Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n\r\n// /*\r\n//  * Решта хвилин: отримуємо хвилини, що залишилися і ділимо їх на кількість\r\n//  * мілісекунд в одній хвилині (1000 * 60 = мілісекунди * секунди)\r\n//  */\r\n// const mins = Math.floor((time % (1000 * 60 * 60)) / (1000 * 60));\r\n\r\n// /*\r\n//  * Решта секунд: отримуємо секунди, які залишилися і ділимо їх на кількість\r\n//  * миллисекунд в одной секунде (1000)\r\n//  */\r\n// const secs = Math.floor((time % (1000 * 60)) / 1000);"]}